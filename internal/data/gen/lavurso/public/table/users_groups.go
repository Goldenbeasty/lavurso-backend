//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var UsersGroups = newUsersGroupsTable("public", "users_groups", "")

type usersGroupsTable struct {
	postgres.Table

	//Columns
	UserID  postgres.ColumnInteger
	GroupID postgres.ColumnInteger

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type UsersGroupsTable struct {
	usersGroupsTable

	EXCLUDED usersGroupsTable
}

// AS creates new UsersGroupsTable with assigned alias
func (a UsersGroupsTable) AS(alias string) *UsersGroupsTable {
	return newUsersGroupsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new UsersGroupsTable with assigned schema name
func (a UsersGroupsTable) FromSchema(schemaName string) *UsersGroupsTable {
	return newUsersGroupsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new UsersGroupsTable with assigned table prefix
func (a UsersGroupsTable) WithPrefix(prefix string) *UsersGroupsTable {
	return newUsersGroupsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new UsersGroupsTable with assigned table suffix
func (a UsersGroupsTable) WithSuffix(suffix string) *UsersGroupsTable {
	return newUsersGroupsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newUsersGroupsTable(schemaName, tableName, alias string) *UsersGroupsTable {
	return &UsersGroupsTable{
		usersGroupsTable: newUsersGroupsTableImpl(schemaName, tableName, alias),
		EXCLUDED:         newUsersGroupsTableImpl("", "excluded", ""),
	}
}

func newUsersGroupsTableImpl(schemaName, tableName, alias string) usersGroupsTable {
	var (
		UserIDColumn   = postgres.IntegerColumn("user_id")
		GroupIDColumn  = postgres.IntegerColumn("group_id")
		allColumns     = postgres.ColumnList{UserIDColumn, GroupIDColumn}
		mutableColumns = postgres.ColumnList{}
	)

	return usersGroupsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		UserID:  UserIDColumn,
		GroupID: GroupIDColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
