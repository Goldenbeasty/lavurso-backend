//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Subjects = newSubjectsTable("public", "subjects", "")

type subjectsTable struct {
	postgres.Table

	//Columns
	ID   postgres.ColumnInteger
	Name postgres.ColumnString

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type SubjectsTable struct {
	subjectsTable

	EXCLUDED subjectsTable
}

// AS creates new SubjectsTable with assigned alias
func (a SubjectsTable) AS(alias string) *SubjectsTable {
	return newSubjectsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new SubjectsTable with assigned schema name
func (a SubjectsTable) FromSchema(schemaName string) *SubjectsTable {
	return newSubjectsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new SubjectsTable with assigned table prefix
func (a SubjectsTable) WithPrefix(prefix string) *SubjectsTable {
	return newSubjectsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new SubjectsTable with assigned table suffix
func (a SubjectsTable) WithSuffix(suffix string) *SubjectsTable {
	return newSubjectsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newSubjectsTable(schemaName, tableName, alias string) *SubjectsTable {
	return &SubjectsTable{
		subjectsTable: newSubjectsTableImpl(schemaName, tableName, alias),
		EXCLUDED:      newSubjectsTableImpl("", "excluded", ""),
	}
}

func newSubjectsTableImpl(schemaName, tableName, alias string) subjectsTable {
	var (
		IDColumn       = postgres.IntegerColumn("id")
		NameColumn     = postgres.StringColumn("name")
		allColumns     = postgres.ColumnList{IDColumn, NameColumn}
		mutableColumns = postgres.ColumnList{NameColumn}
	)

	return subjectsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:   IDColumn,
		Name: NameColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
