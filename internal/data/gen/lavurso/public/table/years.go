//
// Code generated by go-jet DO NOT EDIT.
//
// WARNING: Changes to this file may cause incorrect behavior
// and will be lost if the code is regenerated
//

package table

import (
	"github.com/go-jet/jet/v2/postgres"
)

var Years = newYearsTable("public", "years", "")

type yearsTable struct {
	postgres.Table

	//Columns
	ID          postgres.ColumnInteger
	DisplayName postgres.ColumnString
	Current     postgres.ColumnBool

	AllColumns     postgres.ColumnList
	MutableColumns postgres.ColumnList
}

type YearsTable struct {
	yearsTable

	EXCLUDED yearsTable
}

// AS creates new YearsTable with assigned alias
func (a YearsTable) AS(alias string) *YearsTable {
	return newYearsTable(a.SchemaName(), a.TableName(), alias)
}

// Schema creates new YearsTable with assigned schema name
func (a YearsTable) FromSchema(schemaName string) *YearsTable {
	return newYearsTable(schemaName, a.TableName(), a.Alias())
}

// WithPrefix creates new YearsTable with assigned table prefix
func (a YearsTable) WithPrefix(prefix string) *YearsTable {
	return newYearsTable(a.SchemaName(), prefix+a.TableName(), a.TableName())
}

// WithSuffix creates new YearsTable with assigned table suffix
func (a YearsTable) WithSuffix(suffix string) *YearsTable {
	return newYearsTable(a.SchemaName(), a.TableName()+suffix, a.TableName())
}

func newYearsTable(schemaName, tableName, alias string) *YearsTable {
	return &YearsTable{
		yearsTable: newYearsTableImpl(schemaName, tableName, alias),
		EXCLUDED:   newYearsTableImpl("", "excluded", ""),
	}
}

func newYearsTableImpl(schemaName, tableName, alias string) yearsTable {
	var (
		IDColumn          = postgres.IntegerColumn("id")
		DisplayNameColumn = postgres.StringColumn("display_name")
		CurrentColumn     = postgres.BoolColumn("current")
		allColumns        = postgres.ColumnList{IDColumn, DisplayNameColumn, CurrentColumn}
		mutableColumns    = postgres.ColumnList{DisplayNameColumn, CurrentColumn}
	)

	return yearsTable{
		Table: postgres.NewTable(schemaName, tableName, alias, allColumns...),

		//Columns
		ID:          IDColumn,
		DisplayName: DisplayNameColumn,
		Current:     CurrentColumn,

		AllColumns:     allColumns,
		MutableColumns: mutableColumns,
	}
}
